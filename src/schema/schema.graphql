
"Definiciones de los tipos de raíz"
type Query {
    "lista de usuarios registrados en la BD (clientes/admin)"
    users: ResultUsers
    "Parra iniciar seiseón de usuario"
    login(email:String!, password: String!): ResultLogin
    "Autenticarnos mediante token"
    me: ResultUser
}

type Mutation {
    register(user: UserInput!): ResultUser
}

"Interface que especifica las propoedades obligatorias"
interface Result{
    status: Boolean!
    message: String!
}



type ResultUsers implements Result {
    status: Boolean!
    message: String! 
    "Lista de usuarios registrados"
    users: [User!]!

}


type ResultUser implements Result {
    status: Boolean!
    message: String! 
    "Info del usuario"
    user: User

}


type ResultLogin implements Result {
    status: Boolean!
    message: String! 
    "información del token del usuario"
    token:String

}

"email = usuario de la BD"

type User {
    "Identificador único"
    id: ID!
    "Nombre"
    name: String!
    "Apellidos"
    lastname: String!
    "Correo electronico"
    email:String!
    "password de la cuenta"
    password: String!
    "fecha de registro en la BD"
    registerDate: String!
    "fecha de nacimiento- Solo mayores de 18 años"
    birthday: String!
    "Permisos de usuario"
    role: Role!
}

"INPUT PARA AÑADIR LOS DATOS DEL USUARIO EN EL REGISTRO"
input UserInput {
    "ID no obligatorio"
    id: ID
     "Nombre"
    name: String!
    "Apellidos"
    lastname: String!
    "Correo electronico"
    email:String!
    "password de la cuenta"
    password: String!
    "fecha de nacimiento- Solo mayores de 18 años"
    birthday: String!
    "Permisos de usuario"
    role: Role=CLIENT

}

enum Role{
    CLIENT
    ADMIN
}